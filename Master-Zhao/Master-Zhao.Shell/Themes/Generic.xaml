<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Master_Zhao.Shell.Controls"
    xmlns:converter="clr-namespace:Master_Zhao.Shell.Infrastructure.Converter">

    <converter:CenterPointConverter x:Key="centerPointConverter"/>
    <converter:OpacityConverter x:Key="opacityConverter"/>

    <Style TargetType="{x:Type local:ThumbImageControl}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ThumbImageControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Image Source="{Binding ThumbImageObj,RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" Value="Silver"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ImageButton}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Image Grid.Row="0" Source="{Binding ImagePath,RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center"  Stretch="Uniform"></Image>

                            <Label Grid.Row="1" Foreground="Black" FontSize="13" Content="{Binding Title,RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Center" VerticalAlignment="Bottom" HorizontalContentAlignment="Center" />
                            <Label Grid.Row="2" Foreground="Silver" FontSize="11" Content="{Binding Subtitle,RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Center" VerticalAlignment="Bottom" HorizontalContentAlignment="Center" ToolTip="{Binding RelativeSource={RelativeSource Mode=Self},Path=Content}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".9"/>
                            <Setter Property="BorderBrush" Value="Silver"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ImgFuncButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImgFuncButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Image Source="{Binding DetailUrl,RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"></Image>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FastRunButton}">
        <!--cause a bug-->
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Silver"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Silver"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <Grid x:Name="grid">
                            <Grid.Background>
                                <SolidColorBrush Color="LightBlue" 
                                                 Opacity="{Binding IsSelected,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource opacityConverter}}"></SolidColorBrush>
                            </Grid.Background>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Height="56">
                                <Image Grid.Row="0" Stretch="UniformToFill" Source="{Binding ImagePath,RelativeSource={RelativeSource TemplatedParent}}" Width="48" Height="48"/>
                            </Grid>
                            <ContentPresenter Grid.Row="1" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>

                        <Border.Clip>
                            <EllipseGeometry RadiusX="{Binding ContentRadiusX,RelativeSource={RelativeSource TemplatedParent}}"
                                 RadiusY="{Binding ContentRadiusY,RelativeSource={RelativeSource TemplatedParent}}"
                                 Center="{Binding Center,RelativeSource={RelativeSource TemplatedParent}}">
                            </EllipseGeometry>
                        </Border.Clip>


                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonBorderColor}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonBorderColor}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Padding" Value="0,1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonDisabledBackgroundColor}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonDisabledBorderColor}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ButtonDisabledForegroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ImageButtonForStartMenu}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButtonForStartMenu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="auto"/>
                              
                            </Grid.RowDefinitions>

                            <Image Margin="10" Grid.Row="0" x:Name="img_Icon" Source="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IconSource}" HorizontalAlignment="Center" VerticalAlignment="Center"  Stretch="Uniform"></Image>
                            <TextBlock Grid.Row="1" Margin="0,1" TextWrapping="Wrap" Text="{Binding DisplayName,RelativeSource={RelativeSource TemplatedParent}}"  VerticalAlignment="Bottom" HorizontalAlignment="Center" ToolTip="{Binding RelativeSource={RelativeSource Mode=Self},Path=Content}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
                                    <ColorAnimation Duration="0:0:0.2">
                                        <ColorAnimation.To>
                                            <Color R="255" G="255" B="255" A="255"/>
                                        </ColorAnimation.To>
                                    </ColorAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
                                    <ColorAnimation Duration="0:0:0.2" To="Transparent"></ColorAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
