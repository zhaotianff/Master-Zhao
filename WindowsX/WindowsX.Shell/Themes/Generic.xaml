<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WindowsX.Shell.Controls"
    xmlns:converter="clr-namespace:WindowsX.Shell.Infrastructure.Converter">

    <converter:CenterPointConverter x:Key="centerPointConverter"/>
    <converter:OpacityConverter x:Key="opacityConverter"/>

    <Style TargetType="{x:Type local:ThumbImageControl}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ThumbImageControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Image Source="{Binding ThumbImageObj,RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" Value="Silver"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ImageButton}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Image Grid.Row="0" Source="{Binding ImagePath,RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center"  Stretch="Uniform"></Image>

                            <Label Grid.Row="1" Foreground="Black" FontSize="13" Content="{Binding Title,RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Center" VerticalAlignment="Bottom" HorizontalContentAlignment="Center" />
                            <Label Grid.Row="2" Foreground="Silver" FontSize="11" Content="{Binding Subtitle,RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Center" VerticalAlignment="Bottom" HorizontalContentAlignment="Center" ToolTip="{Binding RelativeSource={RelativeSource Mode=Self},Path=Content}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".9"/>
                            <Setter Property="BorderBrush" Value="Silver"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ImgFuncButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImgFuncButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Image Source="{Binding DetailUrl,RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"></Image>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FastRunButton}">
        <!--cause a bug-->
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Silver"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Silver"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <Grid x:Name="grid">
                            <Grid.Background>
                                <SolidColorBrush Color="LightBlue" 
                                                 Opacity="{Binding IsSelected,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource opacityConverter}}"></SolidColorBrush>
                            </Grid.Background>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Height="56">
                                <Image Grid.Row="0" Stretch="UniformToFill" Source="{Binding ImagePath,RelativeSource={RelativeSource TemplatedParent}}" Width="48" Height="48"/>
                            </Grid>
                            <ContentPresenter Grid.Row="1" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>

                        <Border.Clip>
                            <EllipseGeometry RadiusX="{Binding ContentRadiusX,RelativeSource={RelativeSource TemplatedParent}}"
                                 RadiusY="{Binding ContentRadiusY,RelativeSource={RelativeSource TemplatedParent}}"
                                 Center="{Binding Center,RelativeSource={RelativeSource TemplatedParent}}">
                            </EllipseGeometry>
                        </Border.Clip>


                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonBorderColor}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonBorderColor}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Padding" Value="0,1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonDisabledBackgroundColor}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonDisabledBorderColor}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ButtonDisabledForegroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ImageButtonForStartMenu}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButtonForStartMenu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="auto"/>
                              
                            </Grid.RowDefinitions>

                            <Image Margin="10" Grid.Row="0" x:Name="img_Icon" Source="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IconSource}" HorizontalAlignment="Center" VerticalAlignment="Center"  Stretch="Uniform"></Image>
                            <TextBlock Grid.Row="1" Margin="0,1" TextWrapping="Wrap" Text="{Binding DisplayName,RelativeSource={RelativeSource TemplatedParent}}"  VerticalAlignment="Bottom" HorizontalAlignment="Center" ToolTip="{Binding RelativeSource={RelativeSource Mode=Self},Path=Content}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
                                    <ColorAnimation Duration="0:0:0.2">
                                        <ColorAnimation.To>
                                            <Color R="255" G="255" B="255" A="255"/>
                                        </ColorAnimation.To>
                                    </ColorAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
                                    <ColorAnimation Duration="0:0:0.2" To="Transparent"></ColorAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <converter:ToggleStateConverter x:Key="ToggleStateConverter"/>

    <Style TargetType="{x:Type local:ToggleSwitch}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleSwitch}">
                    <StackPanel Orientation="Horizontal" Margin="0,10"  HorizontalAlignment="Center" VerticalAlignment="Center">
                        <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToggleSwitchState}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Margin" Value="0,0,10,0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="border"  BorderBrush="Black" BorderThickness="1.3" Height="20" Width="44">
                                                    <Rectangle x:Name="rect" Fill="Black" Width="15" Height="15" Margin="0,0,20,0"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Background" Value="LightBlue" TargetName="border"/>
                                                        <Setter Property="Fill" Value="White" TargetName="rect"/>
                                                        <Setter Property="Margin" Value="20,0,0,0" TargetName="rect"/>
                                                        <Setter Property="BorderThickness" Value="0" TargetName="border"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Background" Value="Transparent" TargetName="border"/>
                                                        <Setter Property="Fill" Value="Black" TargetName="rect"/>
                                                        <Setter Property="Margin" Value="0,0,20,0" TargetName="rect"/>
                                                        <Setter Property="BorderThickness" Value="1.3" TargetName="border"/>
                                                    </Trigger>

                                                    <!--Cannot freeze this Storyboard timeline tree for use across threads-->
                                                    <!--<EventTrigger RoutedEvent="Checked">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ThicknessAnimation Duration="0:0:0.3" To="20,0,0,0"
                                                                        Storyboard.TargetProperty="Margin" 
                                                                        Storyboard.TargetName="rect"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                    <EventTrigger RoutedEvent="Unchecked">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ThicknessAnimation Duration="0:0:0.3" To="0,0,20,0"
                                                                        Storyboard.TargetProperty="Margin" 
                                                                        Storyboard.TargetName="rect"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>-->
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToggleSwitchState,Converter={StaticResource ToggleStateConverter}}" VerticalAlignment="Center"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CircularMenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CircularMenuItem}">
                    <local:SmallPanel VerticalAlignment="Top" x:Name="PART_CONTROL">
                        <local:SmallPanel.RenderTransform>
                            <RotateTransform x:Name="PART_RotateTransform" Angle="{TemplateBinding Angle}" CenterX="200" CenterY="200" />
                        </local:SmallPanel.RenderTransform>
                        <Path
                            x:Name="PART_Path"
                            VerticalAlignment="Center"
                            Data="M 200,200 0,200 A 200,200 0 0 1 58.6,58.6z"
                            Fill="{TemplateBinding BackgroundColor}" />
                        <Image
                            Width="40"
                            Height="40"
                            Margin="60,100,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            RenderTransformOrigin="0.5,0.5"
                            Source="{TemplateBinding IconImage}">
                            <Image.RenderTransform>
                                <RotateTransform Angle="-70" />
                            </Image.RenderTransform>
                        </Image>
                    </local:SmallPanel>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter" >
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="PART_Path" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                    <ColorAnimation From="White" To="#D597CE" Duration="0:0:0.5"></ColorAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave" >
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="PART_Path" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                    <ColorAnimation To="White" Duration="0:0:0.2"></ColorAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_CONTROL" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Silver" BlurRadius="1" Opacity="0.1"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:CircularMenu}">
        <Setter Property="Width" Value="400" />
        <Setter Property="Height" Value="400" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CircularMenu}">
                    <local:SmallPanel>
                        <ItemsControl x:Name="PART_ItemsControl" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                                      AlternationCount="{TemplateBinding AlternationCount}" ItemsSource="{TemplateBinding ItemsSource}">
                            <ItemsControl.Clip>
                                <EllipseGeometry
                                    x:Name="PART_EllipseGeometry"
                                    Center="200,200"
                                    RadiusX="0"
                                    RadiusY="0" />
                            </ItemsControl.Clip>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <local:CircularMenuItem
                                        Angle="{Binding Angle}"
                                        BackgroundColor="White"
                                        IconImage="{Binding Icon}"
                                        MenuTxt="{Binding DisplayName}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <local:SmallPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        <Grid>
                            <Ellipse x:Name="PART_Ellipse"
                                            Width="150"
                                            Height="150"
                                            Fill="White" />
                            <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding StatusText}"></Label>
                        </Grid>
                    </local:SmallPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:WorkTimeItemControl}">
        <Setter Property="MinHeight" Value="80"></Setter>
        <Setter Property="Width" Value="290"></Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="5" Opacity=".3"></DropShadowEffect>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WorkTimeItemControl}">
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.3"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Margin="5" x:Name="main">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Label Name="lbl_Title" Foreground="White" FontSize="18" FontFamily="Arial" Content="{Binding Data.Title,RelativeSource={RelativeSource TemplatedParent}}"></Label>

                            <Image Grid.Row="1" HorizontalAlignment="Left" Source="../Icon/Utility/play.png" Cursor="Hand" Name="img_start"></Image>
                            <Image Grid.Row="1" HorizontalAlignment="Left" Source="../Icon/Utility/pause.png" Cursor="Hand" Name="img_pause" Visibility="Collapsed"></Image>
                            <Label Name="lbl_EllapsedTimeString" Content="{Binding Data.EllapsedTimeString,RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="1" HorizontalAlignment="Left" FontSize="15" Margin="50,5,0,0" VerticalAlignment="Top"/>
                            <Label Name="lbl_StopWatchEllapsedTime" Content="{Binding Data.EllapsedTime,RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="20" FontFamily="Arial"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
